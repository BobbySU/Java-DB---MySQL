1.
CREATE TABLE photos (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
`description` TEXT NOT NULL,
`date` DATETIME NOT NULL,
views INT NOT NULL DEFAULT 0);

CREATE TABLE comments (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
`comment` VARCHAR(255) NOT NULL,
`date` DATETIME NOT NULL,
photo_id INT NOT NULL,
CONSTRAINT `fk_photo_id`
FOREIGN KEY (photo_id )
REFERENCES photos (id)
);

CREATE TABLE users (
id INT NOT NULL PRIMARY KEY, 
username VARCHAR(30) NOT NULL UNIQUE,
`password` VARCHAR(30) NOT NULL,
email VARCHAR(50) NOT NULL,
gender CHAR(1) NOT NULL,
age INT NOT NULL,
job_title VARCHAR(40) NOT NULL,
ip VARCHAR(30) NOT NULL
);

CREATE TABLE users_photos (
user_id INT NOT NULL,
photo_id INT NOT NULL,
CONSTRAINT `fk_user_id`
FOREIGN KEY (user_id)
REFERENCES users (id),
CONSTRAINT `fk_photo1_id`
FOREIGN KEY (photo_id)
REFERENCES photos (id)
);

CREATE TABLE likes (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
photo_id INT,
user_id INT,
CONSTRAINT `fk_photo2_id`
FOREIGN KEY (photo_id)
REFERENCES photos (id),
CONSTRAINT `fk_user1_id`
FOREIGN KEY (user_id)
REFERENCES users (id)
);

CREATE TABLE addresses (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
address VARCHAR(30) NOT NULL,
town VARCHAR(30) NOT NULL,
country VARCHAR(30) NOT NULL,
user_id INT NOT NULL, 
CONSTRAINT `fk_user2_id`
FOREIGN KEY (user_id)
REFERENCES users (id)
);


2.
INSERT INTO addresses (address, town, country, user_id)
SELECT username, `password`, ip, age
FROM users 
WHERE gender LIKE 'M';


3.
UPDATE addresses 
SET country = (CASE 
WHEN country LIKE 'B%' THEN 'Blocked'
WHEN country LIKE 'T%' THEN 'Test'
WHEN country LIKE 'P%' THEN 'In Progress'
ELSE country 
END);


4.
DELETE FROM addresses WHERE id % 3 = 0; 


5.
SELECT username, gender, age FROM users
ORDER BY age DESC, username;


6.
SELECT p.id, p.`date` AS date_and_time, p.`description`, COUNT(c.id) AS commentsCount FROM photos AS p
JOIN comments AS c ON p.id = c.photo_id
GROUP BY p.id
ORDER BY commentsCount DESC, p.id
LIMIT 5;


7.
SELECT CONCAT(u.id, ' ', u.username) AS id_username, u.email FROM users AS u
JOIN users_photos AS up ON u.id = up.user_id
JOIN photos AS p ON up.photo_id = p.id
WHERE u.id = p.id
ORDER BY u.id;


8.